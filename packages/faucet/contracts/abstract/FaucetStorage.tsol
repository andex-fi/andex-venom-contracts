pragma ever-solidity >= 0.62.0;
pragma AbiHeader expire;

import '@broxus/tip3/contracts/interfaces/ITokenRoot.tsol';
import '@broxus/tip3/contracts/interfaces/ITokenWallet.tsol';
import '@broxus/tip3/contracts/interfaces/IAcceptTokensTransferCallback.tsol';

import '@broxus/contracts/contracts/libraries/MsgFlag.tsol';

import '../interfaces/IFaucet.tsol';
import '../interfaces/IUserData.tsol';
import '../interfaces/IFaucetFactory.tsol';
import '../UserData.tsol';


abstract contract FaucetStorage is IFaucet, IAcceptTokensTransferCallback {
    // ERRORS
    uint8 constant NOT_OWNER = 101;
    uint8 constant NOT_ROOT = 102;
    uint8 constant NOT_TOKEN_WALLET = 103;
    uint8 constant NOT_USER_DATA = 104;
    uint8 constant EXTERNAL_CALL = 105;
    uint8 constant WRONG_INTERVAL = 106;
    uint8 constant BAD_CLAIM_TOKENS_INPUT = 107;
    uint8 constant NOT_FACTORY = 108;
    uint8 constant LOW_MSG_VALUE = 109;

    // constants
    uint128 constant TOKEN_WALLET_DEPLOY_VALUE = 0.5 ever;
    uint128 constant TOKEN_WALLET_DEPLOY_GRAMS_VALUE = 0.1 ever;
    uint128 constant MIN_CALL_MSG_VALUE = 1 ever;
    uint128 constant USER_DATA_DEPLOY_VALUE = 0.2 ever;
    uint128 constant USER_DATA_UPGRADE_VALUE = 1 ever;
    uint128 constant REQUEST_UPGRADE_VALUE = 1.5 ever;
    uint128 constant TOKEN_TRANSFER_VALUE = 1 ever;
    uint128 constant FACTORY_DEPLOY_CALLBACK_VALUE = 0.1 ever;
    uint128 constant CONTRACT_MIN_BALANCE = 1 ever;

    uint32 constant MAX_UINT32 = 0xFFFFFFFF;
    uint128 constant SCALING_FACTOR = 1e18;

    // should be set dynamically
    address claimTokenRoot;

    address claimTokenWallet;

    uint128 claimTokenBalance;

    uint128 claimAmount;

    address owner;

    TvmCell static platformCode;

    TvmCell static userDataCode;

    address static factory;

    uint64 static deploy_nonce;

    uint32 static user_data_version;
    uint32 static faucet_version;
}